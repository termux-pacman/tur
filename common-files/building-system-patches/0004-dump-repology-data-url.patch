--- a/scripts/updates/api/dump-repology-data
+++ b/scripts/updates/api/dump-repology-data
@@ -30,11 +30,11 @@
 def get_repology_data(last_project, project):
     url = f"https://repology.org/api/v1"
     if project != "":
-        url = f"{url}/projects/{project}/?inrepo=termux&outdated=1"
+        url = f"{url}/projects/{project}/?inrepo=tur&outdated=1"
     else:
-        url = f"{url}/projects/{last_project}{'/' if last_project != '' else ''}?inrepo=termux&outdated=1&families_newest=2-"
+        url = f"{url}/projects/{last_project}{'/' if last_project != '' else ''}?inrepo=tur&outdated=1&families_newest=2-"
 
-    repology_data = requests_get(url, timeout=60, headers={'User-Agent': 'Termux update checker 1.0 (github.com/termux/termux-packages)'}).json()
+    repology_data = requests_get(url, timeout=60, headers={'User-Agent': 'TUR update checker 1.0 (github.com/termux-user-repository/tur)'}).json()
     # NOTE: We are using `families_newest=2-` so that api will return a
     # package as outdated if it is so in 2 or more
     # repo family. This helps us avoid false positives.
